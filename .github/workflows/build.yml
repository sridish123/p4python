name: Build P4Python

env:
  codeline:       "r21.1"
  docker:         "ppiorunski/p4php7:python-27.35.36.37.38.39-manylinux2010_x86_64-github"
  mount:          "${{ github.workspace }}/..:/work"
  bindir:         "${{ github.workspace }}/../p4-bin/bin.linux26x86_64"
  p4api:          "p4api-glibc2.3-openssl1.1.1.tgz"

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:
  builds-linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        pyver: [27, 36, 37, 38, 39]
    steps:

    - name: Checkout source code
      uses: actions/checkout@v2

    - name: Login to docker hub
      uses: docker/login-action@v1
      with:
        username: odidev
        password: nibble@123

    - name: Get p4api
      run: |
        mkdir -p $bindir
        cd .. && wget ftp://ftp.perforce.com/perforce/$codeline/bin.linux26x86_64/$p4api -O $bindir/$p4api

    - name: Get p4 and p4d binary
      run: |
        wget ftp://ftp.perforce.com/perforce/$codeline/bin.linux26x86_64/p4d -O $bindir/p4d && chmod 775 $bindir/p4d
    - name: Build P4Python
      run: |
        docker pull $docker
        chmod +x linux_build/build-wheels.sh
        cp -rf ../p4python ../p4-python
        docker run -v $mount $docker /work/p4-python/linux_build/build-wheels.sh ${{ matrix.pyver }}
        cp ../p4-python/repair/p4python-*.whl ${{ github.workspace }}/p4python-cp${{ matrix.pyver }}-manylinux2010_x86_64.whl

    - uses: actions/upload-artifact@v2
      with:
        name: non-production-p4python-wheel-cp${{ matrix.pyver }}
        path: ${{ github.workspace }}/p4python-cp${{ matrix.pyver }}-manylinux2010_x86_64.whl
